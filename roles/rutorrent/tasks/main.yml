---
# ansible_architecture: "x86_64" or "armv7l"
- name: Load distro-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "os_{{ ansible_lsb.codename }}_{{ ansible_architecture }}.yml"
    - "os_{{ ansible_distribution_release }}.yml"
    - "os_default.yml"

- name: Create rutorrent group
  group: name=rutorrent state=present

- name: Create rutorrent user
  user: name=rutorrent comment="ruTorrent Web UI" group=rutorrent groups=rtorrent,users shell=/bin/bash

- name: Add rtorrent user to www-data group
  user: name=rtorrent groups=www-data append=yes

- name: Create rutorrent home directories
  file: path=/home/rutorrent/{{ item }} state=directory owner=rutorrent group=www-data mode=0750
  with_items:
    - .
    - bin
    - src
    - profile
    - profile/users
    - profile/settings
    - profile/torrents

- include: install.yml

- name: Render rutorrent include for rtorrent
  template: src=_rutorrent.rc dest=/var/torrent/_rutorrent.rc owner={{ rt_user }}/ group={{ rt_user }}/ mode=0640 force=yes

- name: Set ruTorrent config values
  lineinfile:
    dest: /home/rutorrent/ruTorrent-master/conf/config.php
    regexp: "^\\s+\\${{ item.name }} = "
    line: "\t${{ item.name }} = {{ item.value }};"
  with_items:
    # Upper available directory. Absolute path with trailing slash.
    - {name: 'topDirectory', value: "'/var/torrent/'" }
    - {name: 'scgi_port', value: '0' }
    - {name: 'scgi_host', value: '"unix:///var/torrent/.scgi_local"' }
    - {name: 'profileMask', value: '0770' }
    - {name: 'profilePath', value: "'/home/rutorrent/profile'" }
  notify:
    - Restart php-fpm

- name: Set ruTorrent permissions
  file: dest=/home/rutorrent/ruTorrent-master owner=rutorrent group=www-data mode=g+rX,o= recurse=yes

- name: Create user directories
  file: path="/home/rutorrent/profile/users/{{ item }}" state=directory owner=rutorrent group=www-data mode=0770
  with_items:
    - rutorrent
    - rutorrent/settings
    - rutorrent/torrents

- name: Create user default settings
  copy:
    src: "settings/{{ item }}"
    dest: "/home/rutorrent/profile/users/rutorrent/settings/{{ item }}"
    owner: rutorrent
    group: www-data
    mode: 0660
    force: no
  with_items:
    - theme.dat

- name: Probe avconv binary
  stat: path=/usr/bin/avconv
  register: avconv_bin

- name: Create ffmpeg to avconv symlink
  file: src=/usr/bin/avconv path=/home/{{ rt_user }}/bin/ffmpeg state=link owner={{ rt_user }}/ group={{ rt_user }}/
  when: "( av_tool is not defined or av_tool != 'ffmpeg' ) and avconv_bin.stat.exists"

- include: fpm.yml
- include: nginx.yml
