---
- name: Create .local directory
  file: path=/home/{{ rt_user  }}/.local state=directory owner={{ rt_user  }} group={{ rt_user  }} mode=0750

- name: Install build dependencies for pyenv
  apt: name={{ item }} state=latest
  with_items:
    - build-essential
    - curl
    - llvm
    - make
    - wget
    - xz-utils
    - zlib1g-dev
    - libbz2-dev
    - libssl-dev
    - libreadline-dev
    - libsqlite3-dev
    - libncurses5-dev
    - libncursesw5-dev

- name: Probe pyenv checkout
  stat: path=/home/{{ rt_user  }}/.local/pyenv/plugins/pyenv-installer/.gitignore
  register: pyenv_flagfile

- name: git clone pyenv project
  git: repo=https://github.com/yyuu/pyenv.git dest=/home/{{ rt_user  }}/.local/pyenv
  when: not pyenv_flagfile.stat.exists

- name: Create plugins directory
  file: path=/home/{{ rt_user  }}/.local/pyenv/plugins state=directory owner={{ rt_user  }} group={{ rt_user  }} mode=0750

- name: git clone pyenv plugins
  git: repo=https://github.com/yyuu/{{ item }}.git dest=/home/{{ rt_user  }}/.local/pyenv/plugins/{{ item }}
  when: not pyenv_flagfile.stat.exists
  with_items:
    - pyenv-doctor
    - pyenv-update
    - pyenv-virtualenv
    - pyenv-which-ext
    - pyenv-installer

- name: Fix pyenv ownership
  file: path=/home/{{ rt_user  }}/.local/pyenv state=directory recurse=true owner={{ rt_user  }} group={{ rt_user  }}
  when: not pyenv_flagfile.stat.exists

- name: Install pyenv activation
  copy: src=pyenv.sh dest=/home/{{ rt_user  }}/.local/profile.d/pyenv.sh owner={{ rt_user  }} group={{ rt_user  }} mode=0640

- name: Probe Python installation
  stat: path=/home/{{ rt_user  }}/.local/pyenv/version
  register: pyenv_py_flagfile

- name: Install Python
  shell: su -c '. .bash_aliases; TMPDIR=$PWD/tmp pyenv install {{ pyenv_python_version }}' {{ rt_user  }}
  args:
    executable: /bin/bash
    chdir: /home/{{ rt_user  }}
    creates: "/home/{{ rt_user  }}/.local/pyenv/versions/{{ pyenv_python_version }}/bin/python"
  when: not pyenv_py_flagfile.stat.exists

- name: Install virtualenv and update pip
  shell: su -c '.local/pyenv/versions/{{ pyenv_python_version }}/bin/pip install -U pip virtualenv' {{ rt_user  }}
  args:
    executable: /bin/bash
    chdir: /home/{{ rt_user  }}
    creates: "/home/{{ rt_user  }}/.local/pyenv/versions/{{ pyenv_python_version }}/bin/virtualenv"
  when: not pyenv_py_flagfile.stat.exists

- name: Define global pyenv version
  copy: content="{{ pyenv_python_version }}" dest=/home/{{ rt_user  }}/.local/pyenv/version owner={{ rt_user  }} group={{ rt_user  }} mode=0640 force=no
